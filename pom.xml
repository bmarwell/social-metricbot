<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.bmarwell.social.metricbot</groupId>
  <artifactId>social-metricbot</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <packaging>pom</packaging>
  <name>Social-MetricBot :: root</name>

  <modules>
    <module>common</module>
    <module>mastodon</module>
    <module>bsky-client</module>
    <module>conversion</module>
    <module>bot</module>
    <module>db</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jdk.version>17</jdk.version>
    <java.version>17</java.version>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <!-- help intellij... -->
    <maven.multiModuleProjectDirectory>${maven.multiModuleProjectDirectory}</maven.multiModuleProjectDirectory>
    <spotless.skip>false</spotless.skip>

    <!-- plugins -->
    <plugin.maven.compiler.version>3.13.0</plugin.maven.compiler.version>
    <plugin.maven.dependency.version>3.7.1</plugin.maven.dependency.version>
    <plugin.maven.shade.version>3.6.0</plugin.maven.shade.version>
    <plugin.maven.assembly.version>3.7.1</plugin.maven.assembly.version>
    <plugin.maven.war.version>3.4.0</plugin.maven.war.version>
    <plugin.maven.resources.version>3.3.1</plugin.maven.resources.version>
    <plugin.dockerfile-maven.version>1.4.13</plugin.dockerfile-maven.version>
    <plugin.pitest.version>1.16.1</plugin.pitest.version>
    <extension.dockerfile-maven.version>${plugin.dockerfile-maven.version}</extension.dockerfile-maven.version>

    <!-- java EE + MP -->
    <dependency.jakarta.annotation-api.version>2.1.1</dependency.jakarta.annotation-api.version>
    <dependency.jakarta.cdi-api.version>4.0.1</dependency.jakarta.cdi-api.version>
    <dependency.jaxrs-api.version>3.1.0</dependency.jaxrs-api.version>
    <dependency.jakarta.json-api.version>2.1.3</dependency.jakarta.json-api.version>
    <dependency.jakarta.json.bind-api.version>3.0.1</dependency.jakarta.json.bind-api.version>
    <dependency.jakarta.concurrent-api.version>3.0.3</dependency.jakarta.concurrent-api.version>
    <dependency.jakarta.persistence-api.version>3.1.0</dependency.jakarta.persistence-api.version>
    <dependency.jakarta.transaction-api.version>2.0.1</dependency.jakarta.transaction-api.version>
    <dependency.microprofile.config-api.version>3.0.3</dependency.microprofile.config-api.version>
    <dependency.jakarta.servlet-api.version>6.0.0</dependency.jakarta.servlet-api.version>

    <!-- 3rd party -->
    <dependency.immutables.version>2.10.1</dependency.immutables.version>
    <dependency.jsoup.version>1.18.1</dependency.jsoup.version>
    <dependency.eclipselink.version>4.0.4</dependency.eclipselink.version>
    <dependency.error-prone.version>2.30.0</dependency.error-prone.version>
    <dependency.jackson.version>2.17.2</dependency.jackson.version>

    <!-- logging -->
    <dependency.slf4j-api.version>2.0.16</dependency.slf4j-api.version>
    <logback-classic.version>1.5.6</logback-classic.version>

    <!-- testing -->
    <dependency.assertj.version>3.26.3</dependency.assertj.version>
    <dependency.cxf.version>4.0.5</dependency.cxf.version>
    <junit5.version>5.10.3</junit5.version>
    <dependency.johnzon.version>1.2.21</dependency.johnzon.version>
    <dependency.h2.version>2.3.232</dependency.h2.version>
    <dependency.mockito.version>5.12.0</dependency.mockito.version>
    <dependency.wiremock.version>3.9.1</dependency.wiremock.version>

    <!-- build time plugins -->
    <dependency.palantir-java-format.version>2.48.0</dependency.palantir-java-format.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- JAVA 9+ and LOG dependencies -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${dependency.slf4j-api.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback-classic.version}</version>
        <scope>runtime</scope>
      </dependency>

      <!-- Java EE + MP -->
      <dependency>
        <groupId>jakarta.servlet</groupId>
        <artifactId>jakarta.servlet-api</artifactId>
        <version>${dependency.jakarta.servlet-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>jakarta.inject</groupId>
        <artifactId>jakarta.inject-api</artifactId>
        <version>2.0.1</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>jakarta.enterprise</groupId>
        <artifactId>jakarta.enterprise.cdi-api</artifactId>
        <version>${dependency.jakarta.cdi-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>jakarta.annotation</groupId>
        <artifactId>jakarta.annotation-api</artifactId>
        <version>${dependency.jakarta.annotation-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.microprofile.config</groupId>
        <artifactId>microprofile-config-api</artifactId>
        <version>${dependency.microprofile.config-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>jakarta.transaction</groupId>
        <artifactId>jakarta.transaction-api</artifactId>
        <version>${dependency.jakarta.transaction-api.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- annotation processing -->
      <dependency>
        <groupId>org.immutables</groupId>
        <artifactId>value</artifactId>
        <version>${dependency.immutables.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>${dependency.error-prone.version}</version>
        <scope>provided</scope>
        <optional>true</optional>
      </dependency>

      <!-- 3rd party -->
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
        <version>10.17.0</version>
      </dependency>
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${dependency.h2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>${dependency.jsoup.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${dependency.jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${dependency.jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jdk8</artifactId>
        <version>${dependency.jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <version>${dependency.jackson.version}</version>
      </dependency>

      <!-- testing -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit5.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit5.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit5.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${dependency.assertj.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.wiremock</groupId>
        <artifactId>wiremock</artifactId>
        <version>${dependency.wiremock.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- jax-rs / restulWS implementation -->
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-frontend-jaxrs</artifactId>
        <version>${dependency.cxf.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-rs-client</artifactId>
        <version>${dependency.cxf.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- build time plugins -->
      <!-- palantier: only here so it gets picked up by maven and renovate. -->
      <dependency>
        <groupId>com.palantir.javaformat</groupId>
        <artifactId>palantir-java-format</artifactId>
        <version>${dependency.palantir-java-format.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <!-- forced dependencies -->
  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${dependency.mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${plugin.maven.compiler.version}</version>
          <configuration>
            <annotationProcessorPaths>
              <path>
                <groupId>org.immutables</groupId>
                <artifactId>value</artifactId>
                <version>${dependency.immutables.version}</version>
              </path>
            </annotationProcessorPaths>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${plugin.maven.war.version}</version>
          <configuration>
            <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${plugin.maven.dependency.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${plugin.maven.resources.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${plugin.maven.shade.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${plugin.maven.assembly.version}</version>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.3.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.5.0</version>
        </plugin>
        <plugin>
          <groupId>org.pitest</groupId>
          <artifactId>pitest-maven</artifactId>
          <version>${plugin.pitest.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.pitest</groupId>
              <artifactId>pitest-junit5-plugin</artifactId>
              <version>1.2.1</version>
            </dependency>
            <dependency>
              <groupId>io.github.wmaarts</groupId>
              <artifactId>pitest-mutation-testing-elements-plugin</artifactId>
              <version>0.6.3</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.17.1</version>
          <configuration>
            <generateBackupPoms>false</generateBackupPoms>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>dockerfile-maven-plugin</artifactId>
          <version>${plugin.dockerfile-maven.version}</version>
          <extensions>true</extensions>
        </plugin>

        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.43.0</version>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.12</version>
        </plugin>

        <plugin>
          <groupId>io.openliberty.tools</groupId>
          <artifactId>liberty-maven-plugin</artifactId>
          <version>3.10.3</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <inherited>true</inherited>
        <configuration>
          <skip>${spotless.skip}</skip>
          <ratchetFrom>origin/main</ratchetFrom>

          <java>
            <toggleOffOn />

            <palantirJavaFormat>
              <version>${dependency.palantir-java-format.version}</version>
            </palantirJavaFormat>

            <importOrder />
            <removeUnusedImports />
            <trimTrailingWhitespace />
            <endWithNewline />
            <formatAnnotations />

            <licenseHeader>
              <file>${maven.multiModuleProjectDirectory}/build/license/header-java.txt</file>
            </licenseHeader>
          </java>

          <pom>
            <!-- These are the defaults, you can override if you want -->
            <includes>
              <include>pom.xml</include>
            </includes>

            <sortPom>
              <expandEmptyElements>false</expandEmptyElements>
              <!-- https://issues.apache.org/jira/browse/MRELEASE-1111 -->
              <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
            </sortPom>
          </pom>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>apply</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <inherited>true</inherited>
        <executions>
          <execution>
            <id>prepare-agent-unit</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
          <execution>
            <id>report</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <configuration>
          <outputFormats>
            <format>HTML2</format>
          </outputFormats>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>enforce-java</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>${jdk.version}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
    <extensions>
      <extension>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-extension</artifactId>
        <version>${extension.dockerfile-maven.version}</version>
      </extension>
    </extensions>
  </build>

  <profiles>
    <profile>
      <id>dockerize</id>
      <modules>
        <module>app/openliberty/docker</module>
      </modules>
    </profile>
    <profile>
      <id>error-prone</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <compilerArgs>
                <arg>-XDcompilePolicy=simple</arg>
                <arg>-Xplugin:ErrorProne
                  -Xep:MixedMutabilityReturnType:ERROR
                  -Xep:NonApiType:ERROR
                  -Xep:JdkObsolete:ERROR
                  -Xep:UnusedVariable:ERROR
                  -Xep:FutureReturnValueIgnored:ERROR
                  -Xep:JavaTimeDefaultTimeZone:ERROR
                  -XepDisableWarningsInGeneratedCode
                  -XepExcludedPaths:.*/target/generated-sources/.*</arg>
              </compilerArgs>
              <annotationProcessorPaths combine.children="append">
                <path>
                  <groupId>com.google.errorprone</groupId>
                  <artifactId>error_prone_core</artifactId>
                  <version>${dependency.error-prone.version}</version>
                </path>
              </annotationProcessorPaths>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
